/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/homescreen_screen/homeScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

homeScreenViewBase::homeScreenViewBase() :
    buttonCallback(this, &homeScreenViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_240X320_PUZZLE_ID));
    add(image1);

    highestScoreButton.setXY(33, 194);
    highestScoreButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID));
    highestScoreButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_1RN6));
    highestScoreButton.setLabelColor(touchgfx::Color::getColorFromRGB(2, 82, 21));
    highestScoreButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    highestScoreButton.setAction(buttonCallback);
    add(highestScoreButton);

    playButton.setXY(33, 100);
    playButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID));
    playButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_6J3A));
    playButton.setLabelColor(touchgfx::Color::getColorFromRGB(2, 82, 21));
    playButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    playButton.setAction(buttonCallback);
    add(playButton);

    textArea1.setXY(45, 17);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(9, 237, 222));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WZ19));
    add(textArea1);

    highestScorecontainer.setPosition(13, 85, 214, 150);
    highestScorecontainer.setVisible(false);
    image2.setXY(0, -2);
    image2.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_CONTAINERS_SMALL_WIDE_OUTLINED_LIGHT_ID));
    highestScorecontainer.add(image2);

    XbuttonWithLabel1.setXY(89, 109);
    XbuttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID));
    XbuttonWithLabel1.setLabelText(touchgfx::TypedText(T___SINGLEUSE_2A5I));
    XbuttonWithLabel1.setLabelColor(touchgfx::Color::getColorFromRGB(128, 3, 5));
    XbuttonWithLabel1.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    XbuttonWithLabel1.setAction(buttonCallback);
    highestScorecontainer.add(XbuttonWithLabel1);

    textArea.setXY(22, 5);
    textArea.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea.setLinespacing(0);
    textArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_P9WK));
    highestScorecontainer.add(textArea);

    highestScoreText.setPosition(8, 46, 199, 55);
    highestScoreText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    highestScoreText.setLinespacing(0);
    highestScoreText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MGH9));
    highestScorecontainer.add(highestScoreText);

    add(highestScorecontainer);
}

homeScreenViewBase::~homeScreenViewBase()
{

}

void homeScreenViewBase::setupScreen()
{

}

void homeScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &highestScoreButton)
    {
        //click_highest_score_button
        //When highestScoreButton clicked show highestScorecontainer
        //Show highestScorecontainer
        highestScorecontainer.setVisible(true);
        highestScorecontainer.invalidate();
    }
    if (&src == &XbuttonWithLabel1)
    {
        //XbuttonHighestScore
        //When XbuttonWithLabel1 clicked hide highestScorecontainer
        //Hide highestScorecontainer
        highestScorecontainer.setVisible(false);
        highestScorecontainer.invalidate();
    }
    if (&src == &playButton)
    {
        //click_play_button
        //When playButton clicked change screen to playScreen
        //Go to playScreen with no screen transition
        application().gotoplayScreenScreenNoTransition();
    }
}
